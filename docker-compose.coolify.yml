version: '3.8'

services:
  # API service
  api:
    image: langgenius/dify-api:2.0.0-beta.2
    restart: unless-stopped
    environment:
      # Database Configuration
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_DATABASE: ${DB_DATABASE:-dify}
      
      # Redis Configuration
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB:-0}
      
      # Celery Configuration
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@${REDIS_HOST:-redis}:${REDIS_PORT:-6379}/1
      
      # Application Configuration
      MODE: api
      SECRET_KEY: ${SECRET_KEY}
      INIT_PASSWORD: ${INIT_PASSWORD:-}
      
      # URLs Configuration
      CONSOLE_API_URL: ${CONSOLE_API_URL:-}
      CONSOLE_WEB_URL: ${CONSOLE_WEB_URL:-}
      SERVICE_API_URL: ${SERVICE_API_URL:-}
      APP_API_URL: ${APP_API_URL:-}
      APP_WEB_URL: ${APP_WEB_URL:-}
      FILES_URL: ${FILES_URL:-http://api:5001}
      
      # Server Configuration
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      DEBUG: ${DEBUG:-false}
      FLASK_DEBUG: ${FLASK_DEBUG:-false}
      DEPLOY_ENV: ${DEPLOY_ENV:-PRODUCTION}
      
      # Storage Configuration
      STORAGE_TYPE: ${STORAGE_TYPE:-opendal}
      OPENDAL_SCHEME: ${OPENDAL_SCHEME:-fs}
      OPENDAL_FS_ROOT: ${OPENDAL_FS_ROOT:-storage}
      
      # Vector Store Configuration
      VECTOR_STORE: ${VECTOR_STORE:-weaviate}
      WEAVIATE_ENDPOINT: ${WEAVIATE_ENDPOINT:-http://weaviate:8080}
      WEAVIATE_API_KEY: ${WEAVIATE_API_KEY}
      
      # Plugin Configuration
      PLUGIN_REMOTE_INSTALL_HOST: ${EXPOSE_PLUGIN_DEBUGGING_HOST:-localhost}
      PLUGIN_REMOTE_INSTALL_PORT: ${EXPOSE_PLUGIN_DEBUGGING_PORT:-5003}
      INNER_API_KEY_FOR_PLUGIN: ${PLUGIN_DIFY_INNER_API_KEY}
      
      # Sandbox Configuration
      SANDBOX_API_KEY: ${SANDBOX_API_KEY}
      
      # Migration
      MIGRATION_ENABLED: ${MIGRATION_ENABLED:-true}
      
      # CORS
      WEB_API_CORS_ALLOW_ORIGINS: ${WEB_API_CORS_ALLOW_ORIGINS:-*}
      CONSOLE_CORS_ALLOW_ORIGINS: ${CONSOLE_CORS_ALLOW_ORIGINS:-*}
      
    depends_on:
      - db
      - redis
    volumes:
      - app_storage:/app/api/storage
    ports:
      - "5001:5001"

  # Worker service
  worker:
    image: langgenius/dify-api:2.0.0-beta.2
    restart: unless-stopped
    environment:
      # Database Configuration
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_DATABASE: ${DB_DATABASE:-dify}
      
      # Redis Configuration
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB:-0}
      
      # Celery Configuration
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@${REDIS_HOST:-redis}:${REDIS_PORT:-6379}/1
      
      # Application Configuration
      MODE: worker
      SECRET_KEY: ${SECRET_KEY}
      
      # Storage Configuration
      STORAGE_TYPE: ${STORAGE_TYPE:-opendal}
      OPENDAL_SCHEME: ${OPENDAL_SCHEME:-fs}
      OPENDAL_FS_ROOT: ${OPENDAL_FS_ROOT:-storage}
      
      # Vector Store Configuration
      VECTOR_STORE: ${VECTOR_STORE:-weaviate}
      WEAVIATE_ENDPOINT: ${WEAVIATE_ENDPOINT:-http://weaviate:8080}
      WEAVIATE_API_KEY: ${WEAVIATE_API_KEY}
      
      # Plugin Configuration
      INNER_API_KEY_FOR_PLUGIN: ${PLUGIN_DIFY_INNER_API_KEY}
      
      # Server Configuration
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      DEBUG: ${DEBUG:-false}
      
    depends_on:
      - db
      - redis
    volumes:
      - app_storage:/app/api/storage

  # Beat scheduler service
  worker_beat:
    image: langgenius/dify-api:2.0.0-beta.2
    restart: unless-stopped
    environment:
      # Database Configuration
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_DATABASE: ${DB_DATABASE:-dify}
      
      # Redis Configuration
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB:-0}
      
      # Celery Configuration
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@${REDIS_HOST:-redis}:${REDIS_PORT:-6379}/1
      
      # Application Configuration
      MODE: beat
      SECRET_KEY: ${SECRET_KEY}
      
      # Server Configuration
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      DEBUG: ${DEBUG:-false}
      
    depends_on:
      - db
      - redis

  # Web frontend
  web:
    image: langgenius/dify-web:2.0.0-beta.2
    restart: unless-stopped
    environment:
      CONSOLE_API_URL: ${CONSOLE_API_URL:-}
      APP_API_URL: ${APP_API_URL:-}
      NEXT_TELEMETRY_DISABLED: ${NEXT_TELEMETRY_DISABLED:-1}
      TEXT_GENERATION_TIMEOUT_MS: ${TEXT_GENERATION_TIMEOUT_MS:-60000}
    depends_on:
      - api
    ports:
      - "3000:3000"

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE:-dify}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5438:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_DATABASE:-dify}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Weaviate Vector Database
  weaviate:
    image: semitechnologies/weaviate:1.19.0
    restart: unless-stopped
    environment:
      PERSISTENCE_DATA_PATH: /var/lib/weaviate
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: false
      DEFAULT_VECTORIZER_MODULE: none
      CLUSTER_HOSTNAME: node1
      AUTHENTICATION_APIKEY_ENABLED: true
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: ${WEAVIATE_API_KEY}
      AUTHENTICATION_APIKEY_USERS: hello@dify.ai
      AUTHORIZATION_ADMINLIST_ENABLED: true
      AUTHORIZATION_ADMINLIST_USERS: hello@dify.ai
    volumes:
      - weaviate_data:/var/lib/weaviate
    ports:
      - "8080:8080"

  # Sandbox for code execution
  sandbox:
    image: langgenius/dify-sandbox:0.2.12
    restart: unless-stopped
    environment:
      API_KEY: ${SANDBOX_API_KEY}
      GIN_MODE: release
      WORKER_TIMEOUT: 15
      ENABLE_NETWORK: true
      SANDBOX_PORT: 8194
    volumes:
      - sandbox_dependencies:/dependencies
      - sandbox_conf:/conf
    ports:
      - "8194:8194"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8194/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  weaviate_data:
  app_storage:
  sandbox_dependencies:
  sandbox_conf: